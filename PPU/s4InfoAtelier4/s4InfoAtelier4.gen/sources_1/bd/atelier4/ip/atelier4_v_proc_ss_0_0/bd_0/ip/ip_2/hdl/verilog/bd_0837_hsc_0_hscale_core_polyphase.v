// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_0837_hsc_0_hscale_core_polyphase (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_upsampled_dout,
        stream_upsampled_empty_n,
        stream_upsampled_read,
        Height,
        WidthIn,
        WidthOut,
        hfltCoeff_address0,
        hfltCoeff_ce0,
        hfltCoeff_q0,
        phasesH_address0,
        phasesH_ce0,
        phasesH_q0,
        stream_scaled_din,
        stream_scaled_full_n,
        stream_scaled_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state4 = 6'd4;
parameter    ap_ST_fsm_state5 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state20 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_upsampled_dout;
input   stream_upsampled_empty_n;
output   stream_upsampled_read;
input  [15:0] Height;
input  [15:0] WidthIn;
input  [15:0] WidthOut;
output  [8:0] hfltCoeff_address0;
output   hfltCoeff_ce0;
input  [15:0] hfltCoeff_q0;
output  [10:0] phasesH_address0;
output   phasesH_ce0;
input  [15:0] phasesH_q0;
output  [23:0] stream_scaled_din;
input   stream_scaled_full_n;
output   stream_scaled_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_upsampled_read;
reg hfltCoeff_ce0;
reg phasesH_ce0;
reg stream_scaled_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_upsampled_blk_n;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln636_reg_1568;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter2_reg;
reg   [0:0] icmp_ln647_reg_1581;
reg   [0:0] icmp_ln659_reg_1607;
reg    stream_scaled_blk_n;
reg    ap_enable_reg_pp1_iter13;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter12_reg;
reg   [0:0] icmp_ln696_reg_1572;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter12_reg;
reg   [0:0] and_ln736_reg_1621;
reg   [0:0] and_ln736_reg_1621_pp1_iter12_reg;
reg   [8:0] indvar_flatten_reg_413;
reg   [6:0] i_reg_424;
reg   [2:0] j_reg_435;
reg   [10:0] x_reg_457;
reg   [10:0] x_reg_457_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
reg    ap_predicate_op231_read_state9;
reg    ap_block_state9_pp1_stage0_iter3;
wire    ap_block_state10_pp1_stage0_iter4;
wire    ap_block_state11_pp1_stage0_iter5;
wire    ap_block_state12_pp1_stage0_iter6;
wire    ap_block_state13_pp1_stage0_iter7;
wire    ap_block_state14_pp1_stage0_iter8;
wire    ap_block_state15_pp1_stage0_iter9;
wire    ap_block_state16_pp1_stage0_iter10;
wire    ap_block_state17_pp1_stage0_iter11;
wire    ap_block_state18_pp1_stage0_iter12;
reg    ap_predicate_op277_write_state19;
reg    ap_block_state19_pp1_stage0_iter13;
reg    ap_block_pp1_stage0_11001;
reg   [31:0] ReadEn_reg_469;
reg   [15:0] xReadPos_reg_480;
reg   [15:0] xReadPos_2_reg_491;
reg   [31:0] ReadEn_1_reg_505;
wire   [9:0] empty_fu_555_p1;
wire   [10:0] trunc_ln224_fu_559_p1;
wire   [10:0] trunc_ln224_1_fu_563_p1;
wire   [16:0] zext_ln224_fu_567_p1;
wire   [10:0] TotalPixels_fu_577_p3;
wire   [8:0] add_ln608_1_fu_585_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln608_fu_591_p2;
reg   [0:0] icmp_ln608_reg_1355;
wire   [2:0] select_ln608_fu_609_p3;
reg   [2:0] select_ln608_reg_1359;
wire   [6:0] select_ln608_1_fu_617_p3;
reg   [6:0] select_ln608_1_reg_1363;
wire   [2:0] add_ln611_fu_670_p2;
wire   [10:0] LoopSize_fu_685_p2;
wire    ap_CS_fsm_state4;
wire   [10:0] add_ln620_fu_700_p2;
wire   [9:0] y_4_fu_706_p2;
reg   [9:0] y_4_reg_1554;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln620_fu_712_p2;
wire   [10:0] x_4_fu_717_p2;
reg   [10:0] x_4_reg_1563;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln636_fu_723_p2;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter1_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter3_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter4_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter5_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter6_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter7_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter8_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter9_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter10_reg;
reg   [0:0] icmp_ln636_reg_1568_pp1_iter11_reg;
wire   [0:0] icmp_ln696_fu_738_p2;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter1_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter2_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter3_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter4_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter5_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter6_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter7_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter8_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter9_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter10_reg;
reg   [0:0] icmp_ln696_reg_1572_pp1_iter11_reg;
wire   [0:0] icmp_ln647_fu_765_p2;
wire   [0:0] icmp_fu_781_p2;
reg   [0:0] icmp_reg_1585;
wire   [0:0] icmp_ln659_fu_797_p2;
wire   [5:0] PhaseH_0_fu_802_p1;
reg   [5:0] PhaseH_0_reg_1611;
reg   [5:0] PhaseH_0_reg_1611_pp1_iter3_reg;
wire   [1:0] ArrayLoc_0_fu_806_p4;
reg   [1:0] ArrayLoc_0_reg_1616;
reg   [1:0] ArrayLoc_0_reg_1616_pp1_iter3_reg;
wire   [0:0] and_ln736_fu_857_p2;
reg   [0:0] and_ln736_reg_1621_pp1_iter3_reg;
reg   [0:0] and_ln736_reg_1621_pp1_iter4_reg;
reg   [0:0] and_ln736_reg_1621_pp1_iter5_reg;
reg   [0:0] and_ln736_reg_1621_pp1_iter6_reg;
reg   [0:0] and_ln736_reg_1621_pp1_iter7_reg;
reg   [0:0] and_ln736_reg_1621_pp1_iter8_reg;
reg   [0:0] and_ln736_reg_1621_pp1_iter9_reg;
reg   [0:0] and_ln736_reg_1621_pp1_iter10_reg;
reg   [0:0] and_ln736_reg_1621_pp1_iter11_reg;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg    ap_condition_pp1_exit_iter3_state9;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg   [5:0] FiltCoeff_0_0_address0;
reg    FiltCoeff_0_0_ce0;
reg    FiltCoeff_0_0_we0;
wire   [15:0] FiltCoeff_0_0_q0;
reg   [5:0] FiltCoeff_1_0_address0;
reg    FiltCoeff_1_0_ce0;
reg    FiltCoeff_1_0_we0;
wire   [15:0] FiltCoeff_1_0_q0;
reg   [5:0] FiltCoeff_2_0_address0;
reg    FiltCoeff_2_0_ce0;
reg    FiltCoeff_2_0_we0;
wire   [15:0] FiltCoeff_2_0_q0;
reg   [5:0] FiltCoeff_3_0_address0;
reg    FiltCoeff_3_0_ce0;
reg    FiltCoeff_3_0_we0;
wire   [15:0] FiltCoeff_3_0_q0;
reg   [5:0] FiltCoeff_4_0_address0;
reg    FiltCoeff_4_0_ce0;
reg    FiltCoeff_4_0_we0;
wire   [15:0] FiltCoeff_4_0_q0;
reg   [5:0] FiltCoeff_5_0_address0;
reg    FiltCoeff_5_0_ce0;
reg    FiltCoeff_5_0_we0;
wire   [15:0] FiltCoeff_5_0_q0;
wire    grp_hscale_polyphase_fu_519_ap_start;
wire    grp_hscale_polyphase_fu_519_ap_done;
wire    grp_hscale_polyphase_fu_519_ap_idle;
wire    grp_hscale_polyphase_fu_519_ap_ready;
reg    grp_hscale_polyphase_fu_519_ap_ce;
wire   [5:0] grp_hscale_polyphase_fu_519_FiltCoeff_address0;
wire    grp_hscale_polyphase_fu_519_FiltCoeff_ce0;
wire   [5:0] grp_hscale_polyphase_fu_519_FiltCoeff1_address0;
wire    grp_hscale_polyphase_fu_519_FiltCoeff1_ce0;
wire   [5:0] grp_hscale_polyphase_fu_519_FiltCoeff2_address0;
wire    grp_hscale_polyphase_fu_519_FiltCoeff2_ce0;
wire   [5:0] grp_hscale_polyphase_fu_519_FiltCoeff3_address0;
wire    grp_hscale_polyphase_fu_519_FiltCoeff3_ce0;
wire   [5:0] grp_hscale_polyphase_fu_519_FiltCoeff4_address0;
wire    grp_hscale_polyphase_fu_519_FiltCoeff4_ce0;
wire   [5:0] grp_hscale_polyphase_fu_519_FiltCoeff5_address0;
wire    grp_hscale_polyphase_fu_519_FiltCoeff5_ce0;
wire   [7:0] grp_hscale_polyphase_fu_519_ap_return_0;
wire   [7:0] grp_hscale_polyphase_fu_519_ap_return_1;
wire   [7:0] grp_hscale_polyphase_fu_519_ap_return_2;
reg    ap_predicate_op263_call_state10;
reg    ap_predicate_op264_call_state11;
reg    ap_predicate_op265_call_state12;
reg    ap_predicate_op266_call_state13;
reg    ap_predicate_op267_call_state14;
reg    ap_predicate_op268_call_state15;
reg    ap_predicate_op269_call_state16;
wire    ap_block_state6_pp1_stage0_iter0_ignore_call35;
wire    ap_block_state7_pp1_stage0_iter1_ignore_call35;
wire    ap_block_state8_pp1_stage0_iter2_ignore_call35;
reg    ap_block_state9_pp1_stage0_iter3_ignore_call35;
wire    ap_block_state10_pp1_stage0_iter4_ignore_call35;
wire    ap_block_state11_pp1_stage0_iter5_ignore_call35;
wire    ap_block_state12_pp1_stage0_iter6_ignore_call35;
wire    ap_block_state13_pp1_stage0_iter7_ignore_call35;
wire    ap_block_state14_pp1_stage0_iter8_ignore_call35;
wire    ap_block_state15_pp1_stage0_iter9_ignore_call35;
wire    ap_block_state16_pp1_stage0_iter10_ignore_call35;
wire    ap_block_state17_pp1_stage0_iter11_ignore_call35;
wire    ap_block_state18_pp1_stage0_iter12_ignore_call35;
reg    ap_block_state19_pp1_stage0_iter13_ignore_call35;
reg    ap_block_pp1_stage0_11001_ignoreCallOp263;
wire   [8:0] grp_reg_ap_uint_9_s_fu_759_d;
wire   [8:0] grp_reg_ap_uint_9_s_fu_759_ap_return;
reg    grp_reg_ap_uint_9_s_fu_759_ap_ce;
reg    ap_predicate_op141_call_state7;
wire    ap_block_state6_pp1_stage0_iter0_ignore_call29;
wire    ap_block_state7_pp1_stage0_iter1_ignore_call29;
wire    ap_block_state8_pp1_stage0_iter2_ignore_call29;
reg    ap_block_state9_pp1_stage0_iter3_ignore_call29;
wire    ap_block_state10_pp1_stage0_iter4_ignore_call29;
wire    ap_block_state11_pp1_stage0_iter5_ignore_call29;
wire    ap_block_state12_pp1_stage0_iter6_ignore_call29;
wire    ap_block_state13_pp1_stage0_iter7_ignore_call29;
wire    ap_block_state14_pp1_stage0_iter8_ignore_call29;
wire    ap_block_state15_pp1_stage0_iter9_ignore_call29;
wire    ap_block_state16_pp1_stage0_iter10_ignore_call29;
wire    ap_block_state17_pp1_stage0_iter11_ignore_call29;
wire    ap_block_state18_pp1_stage0_iter12_ignore_call29;
reg    ap_block_state19_pp1_stage0_iter13_ignore_call29;
reg    ap_block_pp1_stage0_11001_ignoreCallOp141;
reg   [6:0] ap_phi_mux_i_phi_fu_428_p4;
wire    ap_block_pp0_stage0;
reg   [9:0] y_reg_446;
wire    ap_CS_fsm_state20;
reg   [10:0] ap_phi_mux_x_phi_fu_461_p4;
reg   [31:0] ap_phi_mux_ReadEn_phi_fu_473_p4;
reg   [15:0] ap_phi_mux_xReadPos_phi_fu_484_p4;
wire   [15:0] xReadPos_3_fu_842_p3;
wire   [15:0] ap_phi_reg_pp1_iter2_xReadPos_2_reg_491;
wire   [31:0] zext_ln716_fu_830_p1;
wire   [31:0] ap_phi_reg_pp1_iter2_ReadEn_1_reg_505;
reg    grp_hscale_polyphase_fu_519_ap_start_reg;
reg    ap_predicate_op263_call_state10_state9;
wire   [63:0] p_cast_fu_665_p1;
wire   [63:0] zext_ln608_fu_676_p1;
wire   [63:0] zext_ln703_fu_750_p1;
reg   [7:0] PixArray_val_V_6_0_2_fu_182;
wire   [7:0] PixArray_val_V_6_0_fu_933_p3;
reg   [7:0] PixArray_val_V_6_1_2_fu_186;
wire   [7:0] PixArray_val_V_6_1_fu_926_p3;
reg   [7:0] PixArray_val_V_0_2_fu_190;
wire   [7:0] PixArray_val_V_6_2_9_fu_940_p3;
reg   [7:0] PixArray_val_V_0_0_fu_194;
wire   [7:0] PixArray_val_V_6_0_8_fu_954_p3;
reg   [7:0] PixArray_val_V_0_1_fu_198;
wire   [7:0] PixArray_val_V_6_1_8_fu_947_p3;
reg   [7:0] PixArray_val_V_1_2_fu_202;
wire   [7:0] PixArray_val_V_6_2_10_fu_961_p3;
reg   [7:0] PixArray_val_V_1_0_fu_206;
wire   [7:0] PixArray_val_V_6_0_9_fu_975_p3;
reg   [7:0] PixArray_val_V_1_1_fu_210;
wire   [7:0] PixArray_val_V_6_1_9_fu_968_p3;
reg   [7:0] PixArray_val_V_2_2_fu_214;
wire   [7:0] PixArray_val_V_6_2_11_fu_982_p3;
reg   [7:0] PixArray_val_V_2_0_fu_218;
wire   [7:0] PixArray_val_V_6_0_10_fu_996_p3;
reg   [7:0] PixArray_val_V_2_1_fu_222;
wire   [7:0] PixArray_val_V_6_1_10_fu_989_p3;
reg   [7:0] PixArray_val_V_3_2_fu_226;
wire   [7:0] PixArray_val_V_6_2_12_fu_1003_p3;
reg   [7:0] PixArray_val_V_3_0_fu_230;
wire   [7:0] PixArray_val_V_6_0_11_fu_1017_p3;
reg   [7:0] PixArray_val_V_3_1_fu_234;
wire   [7:0] PixArray_val_V_6_1_11_fu_1010_p3;
reg   [7:0] PixArray_val_V_4_2_fu_238;
wire   [7:0] PixArray_val_V_6_2_13_fu_1024_p3;
reg   [7:0] PixArray_val_V_4_0_fu_242;
wire   [7:0] PixArray_val_V_6_0_12_fu_1038_p3;
reg   [7:0] PixArray_val_V_4_1_fu_246;
wire   [7:0] PixArray_val_V_6_1_12_fu_1031_p3;
reg   [7:0] PixArray_val_V_5_2_fu_250;
wire   [7:0] PixArray_val_V_6_2_14_fu_1045_p3;
reg   [7:0] PixArray_val_V_5_0_fu_254;
reg   [7:0] PixArray_val_V_5_1_fu_258;
reg   [7:0] PixArray_val_V_6_2_fu_262;
reg   [7:0] PixArray_val_V_6_0_7_fu_266;
wire   [7:0] PixArray_val_V_7_0_fu_1157_p1;
reg   [7:0] PixArray_val_V_6_1_7_fu_270;
reg   [7:0] PixArray_val_V_6_2_1_fu_274;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln224_fu_571_p2;
wire   [0:0] icmp_ln611_fu_603_p2;
wire   [6:0] add_ln608_fu_597_p2;
wire   [5:0] empty_55_fu_625_p1;
wire   [7:0] tmp_1_fu_637_p3;
wire   [8:0] tmp_cast_fu_629_p3;
wire   [8:0] tmp_1_cast_fu_645_p1;
wire   [8:0] empty_56_fu_649_p2;
wire   [8:0] select_ln608_cast_fu_655_p1;
wire   [8:0] empty_57_fu_659_p2;
wire   [0:0] empty_58_fu_690_p2;
wire   [10:0] p_v1_fu_694_p3;
wire   [8:0] tmp_9_fu_728_p4;
wire   [10:0] xbySamples_fu_744_p2;
wire   [9:0] tmp_fu_771_p4;
wire   [16:0] zext_ln659_fu_787_p1;
wire   [16:0] add_ln659_fu_791_p2;
wire   [0:0] ReadEn_2_fu_824_p2;
wire   [15:0] xReadPos_1_fu_836_p2;
wire   [0:0] p_Result_s_fu_816_p3;
wire   [0:0] icmp_ln736_fu_852_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 grp_hscale_polyphase_fu_519_ap_start_reg = 1'b0;
end

bd_0837_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_0_0_address0),
    .ce0(FiltCoeff_0_0_ce0),
    .we0(FiltCoeff_0_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_0_0_q0)
);

bd_0837_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_1_0_address0),
    .ce0(FiltCoeff_1_0_ce0),
    .we0(FiltCoeff_1_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_1_0_q0)
);

bd_0837_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_2_0_address0),
    .ce0(FiltCoeff_2_0_ce0),
    .we0(FiltCoeff_2_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_2_0_q0)
);

bd_0837_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_3_0_address0),
    .ce0(FiltCoeff_3_0_ce0),
    .we0(FiltCoeff_3_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_3_0_q0)
);

bd_0837_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_4_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_4_0_address0),
    .ce0(FiltCoeff_4_0_ce0),
    .we0(FiltCoeff_4_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_4_0_q0)
);

bd_0837_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_5_0_address0),
    .ce0(FiltCoeff_5_0_ce0),
    .we0(FiltCoeff_5_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_5_0_q0)
);

bd_0837_hsc_0_hscale_polyphase grp_hscale_polyphase_fu_519(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hscale_polyphase_fu_519_ap_start),
    .ap_done(grp_hscale_polyphase_fu_519_ap_done),
    .ap_idle(grp_hscale_polyphase_fu_519_ap_idle),
    .ap_ready(grp_hscale_polyphase_fu_519_ap_ready),
    .ap_ce(grp_hscale_polyphase_fu_519_ap_ce),
    .FiltCoeff_address0(grp_hscale_polyphase_fu_519_FiltCoeff_address0),
    .FiltCoeff_ce0(grp_hscale_polyphase_fu_519_FiltCoeff_ce0),
    .FiltCoeff_q0(FiltCoeff_0_0_q0),
    .FiltCoeff1_address0(grp_hscale_polyphase_fu_519_FiltCoeff1_address0),
    .FiltCoeff1_ce0(grp_hscale_polyphase_fu_519_FiltCoeff1_ce0),
    .FiltCoeff1_q0(FiltCoeff_1_0_q0),
    .FiltCoeff2_address0(grp_hscale_polyphase_fu_519_FiltCoeff2_address0),
    .FiltCoeff2_ce0(grp_hscale_polyphase_fu_519_FiltCoeff2_ce0),
    .FiltCoeff2_q0(FiltCoeff_2_0_q0),
    .FiltCoeff3_address0(grp_hscale_polyphase_fu_519_FiltCoeff3_address0),
    .FiltCoeff3_ce0(grp_hscale_polyphase_fu_519_FiltCoeff3_ce0),
    .FiltCoeff3_q0(FiltCoeff_3_0_q0),
    .FiltCoeff4_address0(grp_hscale_polyphase_fu_519_FiltCoeff4_address0),
    .FiltCoeff4_ce0(grp_hscale_polyphase_fu_519_FiltCoeff4_ce0),
    .FiltCoeff4_q0(FiltCoeff_4_0_q0),
    .FiltCoeff5_address0(grp_hscale_polyphase_fu_519_FiltCoeff5_address0),
    .FiltCoeff5_ce0(grp_hscale_polyphase_fu_519_FiltCoeff5_ce0),
    .FiltCoeff5_q0(FiltCoeff_5_0_q0),
    .p_read(PixArray_val_V_6_0_2_fu_182),
    .p_read1(PixArray_val_V_6_1_2_fu_186),
    .p_read2(PixArray_val_V_0_2_fu_190),
    .p_read3(PixArray_val_V_0_0_fu_194),
    .p_read4(PixArray_val_V_0_1_fu_198),
    .p_read5(PixArray_val_V_1_2_fu_202),
    .p_read6(PixArray_val_V_1_0_fu_206),
    .p_read7(PixArray_val_V_1_1_fu_210),
    .p_read8(PixArray_val_V_2_2_fu_214),
    .p_read9(PixArray_val_V_2_0_fu_218),
    .p_read10(PixArray_val_V_2_1_fu_222),
    .p_read11(PixArray_val_V_3_2_fu_226),
    .p_read12(PixArray_val_V_3_0_fu_230),
    .p_read13(PixArray_val_V_3_1_fu_234),
    .p_read14(PixArray_val_V_4_2_fu_238),
    .p_read15(PixArray_val_V_4_0_fu_242),
    .p_read16(PixArray_val_V_4_1_fu_246),
    .p_read17(PixArray_val_V_5_2_fu_250),
    .p_read18(PixArray_val_V_5_0_fu_254),
    .p_read19(PixArray_val_V_5_1_fu_258),
    .p_read20(PixArray_val_V_6_2_fu_262),
    .p_read21(PixArray_val_V_6_0_7_fu_266),
    .p_read22(PixArray_val_V_6_1_7_fu_270),
    .p_read23(PixArray_val_V_6_2_1_fu_274),
    .PhasesH_0_read(PhaseH_0_reg_1611_pp1_iter3_reg),
    .p_read124(ArrayLoc_0_reg_1616_pp1_iter3_reg),
    .ap_return_0(grp_hscale_polyphase_fu_519_ap_return_0),
    .ap_return_1(grp_hscale_polyphase_fu_519_ap_return_1),
    .ap_return_2(grp_hscale_polyphase_fu_519_ap_return_2)
);

bd_0837_hsc_0_reg_ap_uint_9_s grp_reg_ap_uint_9_s_fu_759(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(grp_reg_ap_uint_9_s_fu_759_d),
    .ap_return(grp_reg_ap_uint_9_s_fu_759_ap_return),
    .ap_ce(grp_reg_ap_uint_9_s_fu_759_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter3_state9)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hscale_polyphase_fu_519_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_predicate_op263_call_state10_state9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            grp_hscale_polyphase_fu_519_ap_start_reg <= 1'b1;
        end else if ((grp_hscale_polyphase_fu_519_ap_ready == 1'b1)) begin
            grp_hscale_polyphase_fu_519_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln696_reg_1572_pp1_iter1_reg == 1'd1) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0))) begin
        ReadEn_1_reg_505 <= ap_phi_mux_ReadEn_phi_fu_473_p4;
    end else if ((((1'd0 == and_ln736_fu_857_p2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln696_reg_1572_pp1_iter1_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0)) | ((1'd1 == and_ln736_fu_857_p2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln696_reg_1572_pp1_iter1_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0)))) begin
        ReadEn_1_reg_505 <= zext_ln716_fu_830_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ReadEn_1_reg_505 <= ap_phi_reg_pp1_iter2_ReadEn_1_reg_505;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ReadEn_reg_469 <= ReadEn_1_reg_505;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd0))) begin
        ReadEn_reg_469 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln608_reg_1355 == 1'd0))) begin
        i_reg_424 <= select_ln608_1_reg_1363;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_424 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln608_fu_591_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_413 <= add_ln608_1_fu_585_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_413 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln608_fu_591_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_435 <= add_ln611_fu_670_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_435 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln696_reg_1572_pp1_iter1_reg == 1'd1) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0))) begin
        xReadPos_2_reg_491 <= ap_phi_mux_xReadPos_phi_fu_484_p4;
    end else if ((((1'd0 == and_ln736_fu_857_p2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln696_reg_1572_pp1_iter1_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0)) | ((1'd1 == and_ln736_fu_857_p2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln696_reg_1572_pp1_iter1_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0)))) begin
        xReadPos_2_reg_491 <= xReadPos_3_fu_842_p3;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        xReadPos_2_reg_491 <= ap_phi_reg_pp1_iter2_xReadPos_2_reg_491;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        xReadPos_reg_480 <= xReadPos_2_reg_491;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd0))) begin
        xReadPos_reg_480 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln636_reg_1568 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        x_reg_457 <= x_4_reg_1563;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd0))) begin
        x_reg_457 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        y_reg_446 <= y_4_reg_1554;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        y_reg_446 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_1572_pp1_iter1_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0))) begin
        ArrayLoc_0_reg_1616 <= {{grp_reg_ap_uint_9_s_fu_759_ap_return[7:6]}};
        PhaseH_0_reg_1611 <= PhaseH_0_fu_802_p1;
        and_ln736_reg_1621 <= and_ln736_fu_857_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        ArrayLoc_0_reg_1616_pp1_iter3_reg <= ArrayLoc_0_reg_1616;
        PhaseH_0_reg_1611_pp1_iter3_reg <= PhaseH_0_reg_1611;
        and_ln736_reg_1621_pp1_iter10_reg <= and_ln736_reg_1621_pp1_iter9_reg;
        and_ln736_reg_1621_pp1_iter11_reg <= and_ln736_reg_1621_pp1_iter10_reg;
        and_ln736_reg_1621_pp1_iter12_reg <= and_ln736_reg_1621_pp1_iter11_reg;
        and_ln736_reg_1621_pp1_iter3_reg <= and_ln736_reg_1621;
        and_ln736_reg_1621_pp1_iter4_reg <= and_ln736_reg_1621_pp1_iter3_reg;
        and_ln736_reg_1621_pp1_iter5_reg <= and_ln736_reg_1621_pp1_iter4_reg;
        and_ln736_reg_1621_pp1_iter6_reg <= and_ln736_reg_1621_pp1_iter5_reg;
        and_ln736_reg_1621_pp1_iter7_reg <= and_ln736_reg_1621_pp1_iter6_reg;
        and_ln736_reg_1621_pp1_iter8_reg <= and_ln736_reg_1621_pp1_iter7_reg;
        and_ln736_reg_1621_pp1_iter9_reg <= and_ln736_reg_1621_pp1_iter8_reg;
        icmp_ln636_reg_1568_pp1_iter10_reg <= icmp_ln636_reg_1568_pp1_iter9_reg;
        icmp_ln636_reg_1568_pp1_iter11_reg <= icmp_ln636_reg_1568_pp1_iter10_reg;
        icmp_ln636_reg_1568_pp1_iter12_reg <= icmp_ln636_reg_1568_pp1_iter11_reg;
        icmp_ln636_reg_1568_pp1_iter2_reg <= icmp_ln636_reg_1568_pp1_iter1_reg;
        icmp_ln636_reg_1568_pp1_iter3_reg <= icmp_ln636_reg_1568_pp1_iter2_reg;
        icmp_ln636_reg_1568_pp1_iter4_reg <= icmp_ln636_reg_1568_pp1_iter3_reg;
        icmp_ln636_reg_1568_pp1_iter5_reg <= icmp_ln636_reg_1568_pp1_iter4_reg;
        icmp_ln636_reg_1568_pp1_iter6_reg <= icmp_ln636_reg_1568_pp1_iter5_reg;
        icmp_ln636_reg_1568_pp1_iter7_reg <= icmp_ln636_reg_1568_pp1_iter6_reg;
        icmp_ln636_reg_1568_pp1_iter8_reg <= icmp_ln636_reg_1568_pp1_iter7_reg;
        icmp_ln636_reg_1568_pp1_iter9_reg <= icmp_ln636_reg_1568_pp1_iter8_reg;
        icmp_ln696_reg_1572_pp1_iter10_reg <= icmp_ln696_reg_1572_pp1_iter9_reg;
        icmp_ln696_reg_1572_pp1_iter11_reg <= icmp_ln696_reg_1572_pp1_iter10_reg;
        icmp_ln696_reg_1572_pp1_iter12_reg <= icmp_ln696_reg_1572_pp1_iter11_reg;
        icmp_ln696_reg_1572_pp1_iter2_reg <= icmp_ln696_reg_1572_pp1_iter1_reg;
        icmp_ln696_reg_1572_pp1_iter3_reg <= icmp_ln696_reg_1572_pp1_iter2_reg;
        icmp_ln696_reg_1572_pp1_iter4_reg <= icmp_ln696_reg_1572_pp1_iter3_reg;
        icmp_ln696_reg_1572_pp1_iter5_reg <= icmp_ln696_reg_1572_pp1_iter4_reg;
        icmp_ln696_reg_1572_pp1_iter6_reg <= icmp_ln696_reg_1572_pp1_iter5_reg;
        icmp_ln696_reg_1572_pp1_iter7_reg <= icmp_ln696_reg_1572_pp1_iter6_reg;
        icmp_ln696_reg_1572_pp1_iter8_reg <= icmp_ln696_reg_1572_pp1_iter7_reg;
        icmp_ln696_reg_1572_pp1_iter9_reg <= icmp_ln696_reg_1572_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln647_reg_1581 == 1'd0) & (icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        PixArray_val_V_0_0_fu_194 <= PixArray_val_V_6_0_8_fu_954_p3;
        PixArray_val_V_0_1_fu_198 <= PixArray_val_V_6_1_8_fu_947_p3;
        PixArray_val_V_0_2_fu_190 <= PixArray_val_V_6_2_9_fu_940_p3;
        PixArray_val_V_1_0_fu_206 <= PixArray_val_V_6_0_9_fu_975_p3;
        PixArray_val_V_1_1_fu_210 <= PixArray_val_V_6_1_9_fu_968_p3;
        PixArray_val_V_1_2_fu_202 <= PixArray_val_V_6_2_10_fu_961_p3;
        PixArray_val_V_2_0_fu_218 <= PixArray_val_V_6_0_10_fu_996_p3;
        PixArray_val_V_2_1_fu_222 <= PixArray_val_V_6_1_10_fu_989_p3;
        PixArray_val_V_2_2_fu_214 <= PixArray_val_V_6_2_11_fu_982_p3;
        PixArray_val_V_3_0_fu_230 <= PixArray_val_V_6_0_11_fu_1017_p3;
        PixArray_val_V_3_1_fu_234 <= PixArray_val_V_6_1_11_fu_1010_p3;
        PixArray_val_V_3_2_fu_226 <= PixArray_val_V_6_2_12_fu_1003_p3;
        PixArray_val_V_4_0_fu_242 <= PixArray_val_V_6_0_12_fu_1038_p3;
        PixArray_val_V_4_1_fu_246 <= PixArray_val_V_6_1_12_fu_1031_p3;
        PixArray_val_V_4_2_fu_238 <= PixArray_val_V_6_2_13_fu_1024_p3;
        PixArray_val_V_5_0_fu_254 <= PixArray_val_V_6_0_7_fu_266;
        PixArray_val_V_5_1_fu_258 <= PixArray_val_V_6_1_7_fu_270;
        PixArray_val_V_5_2_fu_250 <= PixArray_val_V_6_2_14_fu_1045_p3;
        PixArray_val_V_6_0_2_fu_182 <= PixArray_val_V_6_0_fu_933_p3;
        PixArray_val_V_6_1_2_fu_186 <= PixArray_val_V_6_1_fu_926_p3;
        PixArray_val_V_6_2_fu_262 <= PixArray_val_V_6_2_1_fu_274;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln659_reg_1607 == 1'd1) & (icmp_ln647_reg_1581 == 1'd0) & (icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        PixArray_val_V_6_0_7_fu_266 <= PixArray_val_V_7_0_fu_1157_p1;
        PixArray_val_V_6_1_7_fu_270 <= {{stream_upsampled_dout[15:8]}};
        PixArray_val_V_6_2_1_fu_274 <= {{stream_upsampled_dout[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln608_reg_1355 <= icmp_ln608_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln636_reg_1568 <= icmp_ln636_fu_723_p2;
        icmp_ln636_reg_1568_pp1_iter1_reg <= icmp_ln636_reg_1568;
        icmp_ln696_reg_1572_pp1_iter1_reg <= icmp_ln696_reg_1572;
        x_reg_457_pp1_iter1_reg <= x_reg_457;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0))) begin
        icmp_ln647_reg_1581 <= icmp_ln647_fu_765_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln647_fu_765_p2 == 1'd0) & (icmp_ln636_reg_1568_pp1_iter1_reg == 1'd0))) begin
        icmp_ln659_reg_1607 <= icmp_ln659_fu_797_p2;
        icmp_reg_1585 <= icmp_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln636_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln696_reg_1572 <= icmp_ln696_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln608_fu_591_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln608_1_reg_1363 <= select_ln608_1_fu_617_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln608_fu_591_p2 == 1'd0))) begin
        select_ln608_reg_1359 <= select_ln608_fu_609_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        x_4_reg_1563 <= x_4_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_4_reg_1554 <= y_4_fu_706_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_0_0_address0 = zext_ln608_fu_676_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op264_call_state11 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op263_call_state10 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
        FiltCoeff_0_0_address0 = grp_hscale_polyphase_fu_519_FiltCoeff_address0;
    end else begin
        FiltCoeff_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_0_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op264_call_state11 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op263_call_state10 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
        FiltCoeff_0_0_ce0 = grp_hscale_polyphase_fu_519_FiltCoeff_ce0;
    end else begin
        FiltCoeff_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln608_reg_1359 == 3'd0))) begin
        FiltCoeff_0_0_we0 = 1'b1;
    end else begin
        FiltCoeff_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_1_0_address0 = zext_ln608_fu_676_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op265_call_state12 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op264_call_state11 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        FiltCoeff_1_0_address0 = grp_hscale_polyphase_fu_519_FiltCoeff1_address0;
    end else begin
        FiltCoeff_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_1_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op265_call_state12 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op264_call_state11 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        FiltCoeff_1_0_ce0 = grp_hscale_polyphase_fu_519_FiltCoeff1_ce0;
    end else begin
        FiltCoeff_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln608_reg_1359 == 3'd1))) begin
        FiltCoeff_1_0_we0 = 1'b1;
    end else begin
        FiltCoeff_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_2_0_address0 = zext_ln608_fu_676_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op266_call_state13 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op265_call_state12 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
        FiltCoeff_2_0_address0 = grp_hscale_polyphase_fu_519_FiltCoeff2_address0;
    end else begin
        FiltCoeff_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_2_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op266_call_state13 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op265_call_state12 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
        FiltCoeff_2_0_ce0 = grp_hscale_polyphase_fu_519_FiltCoeff2_ce0;
    end else begin
        FiltCoeff_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln608_reg_1359 == 3'd2))) begin
        FiltCoeff_2_0_we0 = 1'b1;
    end else begin
        FiltCoeff_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_3_0_address0 = zext_ln608_fu_676_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op267_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op266_call_state13 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
        FiltCoeff_3_0_address0 = grp_hscale_polyphase_fu_519_FiltCoeff3_address0;
    end else begin
        FiltCoeff_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_3_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op267_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op266_call_state13 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
        FiltCoeff_3_0_ce0 = grp_hscale_polyphase_fu_519_FiltCoeff3_ce0;
    end else begin
        FiltCoeff_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln608_reg_1359 == 3'd3))) begin
        FiltCoeff_3_0_we0 = 1'b1;
    end else begin
        FiltCoeff_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_4_0_address0 = zext_ln608_fu_676_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op268_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op267_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
        FiltCoeff_4_0_address0 = grp_hscale_polyphase_fu_519_FiltCoeff4_address0;
    end else begin
        FiltCoeff_4_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_4_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op268_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op267_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
        FiltCoeff_4_0_ce0 = grp_hscale_polyphase_fu_519_FiltCoeff4_ce0;
    end else begin
        FiltCoeff_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln608_reg_1359 == 3'd4))) begin
        FiltCoeff_4_0_we0 = 1'b1;
    end else begin
        FiltCoeff_4_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_5_0_address0 = zext_ln608_fu_676_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op269_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op268_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        FiltCoeff_5_0_address0 = grp_hscale_polyphase_fu_519_FiltCoeff5_address0;
    end else begin
        FiltCoeff_5_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        FiltCoeff_5_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op269_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op268_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        FiltCoeff_5_0_ce0 = grp_hscale_polyphase_fu_519_FiltCoeff5_ce0;
    end else begin
        FiltCoeff_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((select_ln608_reg_1359 == 3'd5) | ((select_ln608_reg_1359 == 3'd6) | (select_ln608_reg_1359 == 3'd7))))) begin
        FiltCoeff_5_0_we0 = 1'b1;
    end else begin
        FiltCoeff_5_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln608_fu_591_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_condition_pp1_exit_iter3_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter3_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln636_fu_723_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_ReadEn_phi_fu_473_p4 = ReadEn_1_reg_505;
    end else begin
        ap_phi_mux_ReadEn_phi_fu_473_p4 = ReadEn_reg_469;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln608_reg_1355 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_428_p4 = select_ln608_1_reg_1363;
    end else begin
        ap_phi_mux_i_phi_fu_428_p4 = i_reg_424;
    end
end

always @ (*) begin
    if (((icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_xReadPos_phi_fu_484_p4 = xReadPos_2_reg_491;
    end else begin
        ap_phi_mux_xReadPos_phi_fu_484_p4 = xReadPos_reg_480;
    end
end

always @ (*) begin
    if (((icmp_ln636_reg_1568 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_x_phi_fu_461_p4 = x_4_reg_1563;
    end else begin
        ap_phi_mux_x_phi_fu_461_p4 = x_reg_457;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp263) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_hscale_polyphase_fu_519_ap_ce = 1'b1;
    end else begin
        grp_hscale_polyphase_fu_519_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp141) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_reg_ap_uint_9_s_fu_759_ap_ce = 1'b1;
    end else begin
        grp_reg_ap_uint_9_s_fu_759_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        hfltCoeff_ce0 = 1'b1;
    end else begin
        hfltCoeff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        phasesH_ce0 = 1'b1;
    end else begin
        phasesH_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln696_reg_1572_pp1_iter12_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter12_reg == 1'd0) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'd1 == and_ln736_reg_1621_pp1_iter12_reg) & (1'b0 == ap_block_pp1_stage0))) begin
        stream_scaled_blk_n = stream_scaled_full_n;
    end else begin
        stream_scaled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter13 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op277_write_state19 == 1'b1))) begin
        stream_scaled_write = 1'b1;
    end else begin
        stream_scaled_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln659_reg_1607 == 1'd1) & (icmp_ln647_reg_1581 == 1'd0) & (icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        stream_upsampled_blk_n = stream_upsampled_empty_n;
    end else begin
        stream_upsampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_predicate_op231_read_state9 == 1'b1))) begin
        stream_upsampled_read = 1'b1;
    end else begin
        stream_upsampled_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln608_fu_591_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln608_fu_591_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln620_fu_712_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((ap_enable_reg_pp1_iter13 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter12 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter13 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter12 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ArrayLoc_0_fu_806_p4 = {{grp_reg_ap_uint_9_s_fu_759_ap_return[7:6]}};

assign LoopSize_fu_685_p2 = (TotalPixels_fu_577_p3 + 11'd4);

assign PhaseH_0_fu_802_p1 = grp_reg_ap_uint_9_s_fu_759_ap_return[5:0];

assign PixArray_val_V_6_0_10_fu_996_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_0_7_fu_266 : PixArray_val_V_3_0_fu_230);

assign PixArray_val_V_6_0_11_fu_1017_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_0_7_fu_266 : PixArray_val_V_4_0_fu_242);

assign PixArray_val_V_6_0_12_fu_1038_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_0_7_fu_266 : PixArray_val_V_5_0_fu_254);

assign PixArray_val_V_6_0_8_fu_954_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_0_7_fu_266 : PixArray_val_V_1_0_fu_206);

assign PixArray_val_V_6_0_9_fu_975_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_0_7_fu_266 : PixArray_val_V_2_0_fu_218);

assign PixArray_val_V_6_0_fu_933_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_0_7_fu_266 : PixArray_val_V_0_0_fu_194);

assign PixArray_val_V_6_1_10_fu_989_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_1_7_fu_270 : PixArray_val_V_3_1_fu_234);

assign PixArray_val_V_6_1_11_fu_1010_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_1_7_fu_270 : PixArray_val_V_4_1_fu_246);

assign PixArray_val_V_6_1_12_fu_1031_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_1_7_fu_270 : PixArray_val_V_5_1_fu_258);

assign PixArray_val_V_6_1_8_fu_947_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_1_7_fu_270 : PixArray_val_V_1_1_fu_210);

assign PixArray_val_V_6_1_9_fu_968_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_1_7_fu_270 : PixArray_val_V_2_1_fu_222);

assign PixArray_val_V_6_1_fu_926_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_1_7_fu_270 : PixArray_val_V_0_1_fu_198);

assign PixArray_val_V_6_2_10_fu_961_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_274 : PixArray_val_V_2_2_fu_214);

assign PixArray_val_V_6_2_11_fu_982_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_274 : PixArray_val_V_3_2_fu_226);

assign PixArray_val_V_6_2_12_fu_1003_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_274 : PixArray_val_V_4_2_fu_238);

assign PixArray_val_V_6_2_13_fu_1024_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_274 : PixArray_val_V_5_2_fu_250);

assign PixArray_val_V_6_2_14_fu_1045_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_274 : PixArray_val_V_6_2_fu_262);

assign PixArray_val_V_6_2_9_fu_940_p3 = ((icmp_reg_1585[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_274 : PixArray_val_V_1_2_fu_202);

assign PixArray_val_V_7_0_fu_1157_p1 = stream_upsampled_dout[7:0];

assign ReadEn_2_fu_824_p2 = ((ArrayLoc_0_fu_806_p4 != 2'd0) ? 1'b1 : 1'b0);

assign TotalPixels_fu_577_p3 = ((icmp_ln224_fu_571_p2[0:0] == 1'b1) ? trunc_ln224_1_fu_563_p1 : trunc_ln224_fu_559_p1);

assign add_ln608_1_fu_585_p2 = (indvar_flatten_reg_413 + 9'd1);

assign add_ln608_fu_597_p2 = (ap_phi_mux_i_phi_fu_428_p4 + 7'd1);

assign add_ln611_fu_670_p2 = (select_ln608_fu_609_p3 + 3'd1);

assign add_ln620_fu_700_p2 = (p_v1_fu_694_p3 + 11'd5);

assign add_ln659_fu_791_p2 = (zext_ln659_fu_787_p1 + 17'd4);

assign and_ln736_fu_857_p2 = (p_Result_s_fu_816_p3 & icmp_ln736_fu_852_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter13 == 1'b1) & (stream_scaled_full_n == 1'b0) & (ap_predicate_op277_write_state19 == 1'b1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op231_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter13 == 1'b1) & (stream_scaled_full_n == 1'b0) & (ap_predicate_op277_write_state19 == 1'b1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op231_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp141 = (((ap_enable_reg_pp1_iter13 == 1'b1) & (stream_scaled_full_n == 1'b0) & (ap_predicate_op277_write_state19 == 1'b1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op231_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp263 = (((ap_enable_reg_pp1_iter13 == 1'b1) & (stream_scaled_full_n == 1'b0) & (ap_predicate_op277_write_state19 == 1'b1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op231_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter13 == 1'b1) & (stream_scaled_full_n == 1'b0) & (ap_predicate_op277_write_state19 == 1'b1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op231_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter4_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter4_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter6_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter6_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter7_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter7_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter8_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter8_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter9_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter9_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter10_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter10_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter11_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter11_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter12_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter12_ignore_call35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp1_stage0_iter13 = ((stream_scaled_full_n == 1'b0) & (ap_predicate_op277_write_state19 == 1'b1));
end

always @ (*) begin
    ap_block_state19_pp1_stage0_iter13_ignore_call29 = ((stream_scaled_full_n == 1'b0) & (ap_predicate_op277_write_state19 == 1'b1));
end

always @ (*) begin
    ap_block_state19_pp1_stage0_iter13_ignore_call35 = ((stream_scaled_full_n == 1'b0) & (ap_predicate_op277_write_state19 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2_ignore_call35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter3 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op231_read_state9 == 1'b1));
end

always @ (*) begin
    ap_block_state9_pp1_stage0_iter3_ignore_call29 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op231_read_state9 == 1'b1));
end

always @ (*) begin
    ap_block_state9_pp1_stage0_iter3_ignore_call35 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op231_read_state9 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter2_ReadEn_1_reg_505 = 'bx;

assign ap_phi_reg_pp1_iter2_xReadPos_2_reg_491 = 'bx;

always @ (*) begin
    ap_predicate_op141_call_state7 = ((icmp_ln696_reg_1572 == 1'd0) & (icmp_ln636_reg_1568 == 1'd0));
end

always @ (*) begin
    ap_predicate_op231_read_state9 = ((icmp_ln659_reg_1607 == 1'd1) & (icmp_ln647_reg_1581 == 1'd0) & (icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op263_call_state10 = ((icmp_ln696_reg_1572_pp1_iter3_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op263_call_state10_state9 = ((icmp_ln636_reg_1568_pp1_iter2_reg == 1'd0) & (icmp_ln696_reg_1572_pp1_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op264_call_state11 = ((icmp_ln696_reg_1572_pp1_iter4_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op265_call_state12 = ((icmp_ln696_reg_1572_pp1_iter5_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op266_call_state13 = ((icmp_ln696_reg_1572_pp1_iter6_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op267_call_state14 = ((icmp_ln696_reg_1572_pp1_iter7_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter7_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op268_call_state15 = ((icmp_ln696_reg_1572_pp1_iter8_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op269_call_state16 = ((icmp_ln696_reg_1572_pp1_iter9_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter9_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op277_write_state19 = ((icmp_ln696_reg_1572_pp1_iter12_reg == 1'd0) & (icmp_ln636_reg_1568_pp1_iter12_reg == 1'd0) & (1'd1 == and_ln736_reg_1621_pp1_iter12_reg));
end

assign empty_55_fu_625_p1 = select_ln608_1_fu_617_p3[5:0];

assign empty_56_fu_649_p2 = (tmp_cast_fu_629_p3 - tmp_1_cast_fu_645_p1);

assign empty_57_fu_659_p2 = (empty_56_fu_649_p2 + select_ln608_cast_fu_655_p1);

assign empty_58_fu_690_p2 = ((WidthOut > WidthIn) ? 1'b1 : 1'b0);

assign empty_fu_555_p1 = Height[9:0];

assign grp_hscale_polyphase_fu_519_ap_start = grp_hscale_polyphase_fu_519_ap_start_reg;

assign grp_reg_ap_uint_9_s_fu_759_d = phasesH_q0[8:0];

assign hfltCoeff_address0 = p_cast_fu_665_p1;

assign icmp_fu_781_p2 = ((tmp_fu_771_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_571_p2 = ((WidthOut < WidthIn) ? 1'b1 : 1'b0);

assign icmp_ln608_fu_591_p2 = ((indvar_flatten_reg_413 == 9'd384) ? 1'b1 : 1'b0);

assign icmp_ln611_fu_603_p2 = ((j_reg_435 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_712_p2 = ((y_reg_446 == empty_fu_555_p1) ? 1'b1 : 1'b0);

assign icmp_ln636_fu_723_p2 = ((ap_phi_mux_x_phi_fu_461_p4 == add_ln620_fu_700_p2) ? 1'b1 : 1'b0);

assign icmp_ln647_fu_765_p2 = ((ap_phi_mux_ReadEn_phi_fu_473_p4 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln659_fu_797_p2 = ((add_ln659_fu_791_p2 < zext_ln224_fu_567_p1) ? 1'b1 : 1'b0);

assign icmp_ln696_fu_738_p2 = ((tmp_9_fu_728_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln736_fu_852_p2 = ((x_reg_457_pp1_iter1_reg < LoopSize_fu_685_p2) ? 1'b1 : 1'b0);

assign p_Result_s_fu_816_p3 = grp_reg_ap_uint_9_s_fu_759_ap_return[32'd8];

assign p_cast_fu_665_p1 = empty_57_fu_659_p2;

assign p_v1_fu_694_p3 = ((empty_58_fu_690_p2[0:0] == 1'b1) ? trunc_ln224_fu_559_p1 : trunc_ln224_1_fu_563_p1);

assign phasesH_address0 = zext_ln703_fu_750_p1;

assign select_ln608_1_fu_617_p3 = ((icmp_ln611_fu_603_p2[0:0] == 1'b1) ? add_ln608_fu_597_p2 : ap_phi_mux_i_phi_fu_428_p4);

assign select_ln608_cast_fu_655_p1 = select_ln608_fu_609_p3;

assign select_ln608_fu_609_p3 = ((icmp_ln611_fu_603_p2[0:0] == 1'b1) ? 3'd0 : j_reg_435);

assign stream_scaled_din = {{{grp_hscale_polyphase_fu_519_ap_return_2}, {grp_hscale_polyphase_fu_519_ap_return_1}}, {grp_hscale_polyphase_fu_519_ap_return_0}};

assign tmp_1_cast_fu_645_p1 = tmp_1_fu_637_p3;

assign tmp_1_fu_637_p3 = {{select_ln608_1_fu_617_p3}, {1'd0}};

assign tmp_9_fu_728_p4 = {{ap_phi_mux_x_phi_fu_461_p4[10:2]}};

assign tmp_cast_fu_629_p3 = {{empty_55_fu_625_p1}, {3'd0}};

assign tmp_fu_771_p4 = {{x_reg_457_pp1_iter1_reg[10:1]}};

assign trunc_ln224_1_fu_563_p1 = WidthIn[10:0];

assign trunc_ln224_fu_559_p1 = WidthOut[10:0];

assign xReadPos_1_fu_836_p2 = (ap_phi_mux_xReadPos_phi_fu_484_p4 + 16'd1);

assign xReadPos_3_fu_842_p3 = ((ReadEn_2_fu_824_p2[0:0] == 1'b1) ? xReadPos_1_fu_836_p2 : ap_phi_mux_xReadPos_phi_fu_484_p4);

assign x_4_fu_717_p2 = (ap_phi_mux_x_phi_fu_461_p4 + 11'd1);

assign xbySamples_fu_744_p2 = ($signed(ap_phi_mux_x_phi_fu_461_p4) + $signed(11'd2044));

assign y_4_fu_706_p2 = (y_reg_446 + 10'd1);

assign zext_ln224_fu_567_p1 = WidthIn;

assign zext_ln608_fu_676_p1 = select_ln608_1_reg_1363;

assign zext_ln659_fu_787_p1 = ap_phi_mux_xReadPos_phi_fu_484_p4;

assign zext_ln703_fu_750_p1 = xbySamples_fu_744_p2;

assign zext_ln716_fu_830_p1 = ReadEn_2_fu_824_p2;

endmodule //bd_0837_hsc_0_hscale_core_polyphase
